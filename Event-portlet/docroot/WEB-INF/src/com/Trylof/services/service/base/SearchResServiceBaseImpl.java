/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.Trylof.services.service.base;

import com.Trylof.services.model.SearchRes;
import com.Trylof.services.service.SearchResService;
import com.Trylof.services.service.persistence.ItemFoundPersistence;
import com.Trylof.services.service.persistence.ItemLostPersistence;
import com.Trylof.services.service.persistence.ItemVerificationPersistence;
import com.Trylof.services.service.persistence.SearchResPersistence;
import com.Trylof.services.service.persistence.UserMasterPersistence;

import com.liferay.portal.kernel.bean.BeanReference;
import com.liferay.portal.kernel.dao.db.DB;
import com.liferay.portal.kernel.dao.db.DBManagerUtil;
import com.liferay.portal.kernel.dao.jdbc.SqlUpdate;
import com.liferay.portal.kernel.dao.jdbc.SqlUpdateFactoryUtil;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.module.framework.service.IdentifiableOSGiService;
import com.liferay.portal.kernel.service.BaseServiceImpl;
import com.liferay.portal.kernel.service.persistence.ClassNamePersistence;
import com.liferay.portal.kernel.service.persistence.UserPersistence;
import com.liferay.portal.kernel.util.PortalUtil;

import javax.sql.DataSource;

/**
 * Provides the base implementation for the search res remote service.
 *
 * <p>
 * This implementation exists only as a container for the default service methods generated by ServiceBuilder. All custom service methods should be put in {@link com.Trylof.services.service.impl.SearchResServiceImpl}.
 * </p>
 *
 * @author Utkarsh
 * @see com.Trylof.services.service.impl.SearchResServiceImpl
 * @see com.Trylof.services.service.SearchResServiceUtil
 * @generated
 */
public abstract class SearchResServiceBaseImpl extends BaseServiceImpl
	implements SearchResService, IdentifiableOSGiService {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. Always use {@link com.Trylof.services.service.SearchResServiceUtil} to access the search res remote service.
	 */

	/**
	 * Returns the item found local service.
	 *
	 * @return the item found local service
	 */
	public com.Trylof.services.service.ItemFoundLocalService getItemFoundLocalService() {
		return itemFoundLocalService;
	}

	/**
	 * Sets the item found local service.
	 *
	 * @param itemFoundLocalService the item found local service
	 */
	public void setItemFoundLocalService(
		com.Trylof.services.service.ItemFoundLocalService itemFoundLocalService) {
		this.itemFoundLocalService = itemFoundLocalService;
	}

	/**
	 * Returns the item found remote service.
	 *
	 * @return the item found remote service
	 */
	public com.Trylof.services.service.ItemFoundService getItemFoundService() {
		return itemFoundService;
	}

	/**
	 * Sets the item found remote service.
	 *
	 * @param itemFoundService the item found remote service
	 */
	public void setItemFoundService(
		com.Trylof.services.service.ItemFoundService itemFoundService) {
		this.itemFoundService = itemFoundService;
	}

	/**
	 * Returns the item found persistence.
	 *
	 * @return the item found persistence
	 */
	public ItemFoundPersistence getItemFoundPersistence() {
		return itemFoundPersistence;
	}

	/**
	 * Sets the item found persistence.
	 *
	 * @param itemFoundPersistence the item found persistence
	 */
	public void setItemFoundPersistence(
		ItemFoundPersistence itemFoundPersistence) {
		this.itemFoundPersistence = itemFoundPersistence;
	}

	/**
	 * Returns the item lost local service.
	 *
	 * @return the item lost local service
	 */
	public com.Trylof.services.service.ItemLostLocalService getItemLostLocalService() {
		return itemLostLocalService;
	}

	/**
	 * Sets the item lost local service.
	 *
	 * @param itemLostLocalService the item lost local service
	 */
	public void setItemLostLocalService(
		com.Trylof.services.service.ItemLostLocalService itemLostLocalService) {
		this.itemLostLocalService = itemLostLocalService;
	}

	/**
	 * Returns the item lost remote service.
	 *
	 * @return the item lost remote service
	 */
	public com.Trylof.services.service.ItemLostService getItemLostService() {
		return itemLostService;
	}

	/**
	 * Sets the item lost remote service.
	 *
	 * @param itemLostService the item lost remote service
	 */
	public void setItemLostService(
		com.Trylof.services.service.ItemLostService itemLostService) {
		this.itemLostService = itemLostService;
	}

	/**
	 * Returns the item lost persistence.
	 *
	 * @return the item lost persistence
	 */
	public ItemLostPersistence getItemLostPersistence() {
		return itemLostPersistence;
	}

	/**
	 * Sets the item lost persistence.
	 *
	 * @param itemLostPersistence the item lost persistence
	 */
	public void setItemLostPersistence(ItemLostPersistence itemLostPersistence) {
		this.itemLostPersistence = itemLostPersistence;
	}

	/**
	 * Returns the item verification local service.
	 *
	 * @return the item verification local service
	 */
	public com.Trylof.services.service.ItemVerificationLocalService getItemVerificationLocalService() {
		return itemVerificationLocalService;
	}

	/**
	 * Sets the item verification local service.
	 *
	 * @param itemVerificationLocalService the item verification local service
	 */
	public void setItemVerificationLocalService(
		com.Trylof.services.service.ItemVerificationLocalService itemVerificationLocalService) {
		this.itemVerificationLocalService = itemVerificationLocalService;
	}

	/**
	 * Returns the item verification remote service.
	 *
	 * @return the item verification remote service
	 */
	public com.Trylof.services.service.ItemVerificationService getItemVerificationService() {
		return itemVerificationService;
	}

	/**
	 * Sets the item verification remote service.
	 *
	 * @param itemVerificationService the item verification remote service
	 */
	public void setItemVerificationService(
		com.Trylof.services.service.ItemVerificationService itemVerificationService) {
		this.itemVerificationService = itemVerificationService;
	}

	/**
	 * Returns the item verification persistence.
	 *
	 * @return the item verification persistence
	 */
	public ItemVerificationPersistence getItemVerificationPersistence() {
		return itemVerificationPersistence;
	}

	/**
	 * Sets the item verification persistence.
	 *
	 * @param itemVerificationPersistence the item verification persistence
	 */
	public void setItemVerificationPersistence(
		ItemVerificationPersistence itemVerificationPersistence) {
		this.itemVerificationPersistence = itemVerificationPersistence;
	}

	/**
	 * Returns the search res local service.
	 *
	 * @return the search res local service
	 */
	public com.Trylof.services.service.SearchResLocalService getSearchResLocalService() {
		return searchResLocalService;
	}

	/**
	 * Sets the search res local service.
	 *
	 * @param searchResLocalService the search res local service
	 */
	public void setSearchResLocalService(
		com.Trylof.services.service.SearchResLocalService searchResLocalService) {
		this.searchResLocalService = searchResLocalService;
	}

	/**
	 * Returns the search res remote service.
	 *
	 * @return the search res remote service
	 */
	public SearchResService getSearchResService() {
		return searchResService;
	}

	/**
	 * Sets the search res remote service.
	 *
	 * @param searchResService the search res remote service
	 */
	public void setSearchResService(SearchResService searchResService) {
		this.searchResService = searchResService;
	}

	/**
	 * Returns the search res persistence.
	 *
	 * @return the search res persistence
	 */
	public SearchResPersistence getSearchResPersistence() {
		return searchResPersistence;
	}

	/**
	 * Sets the search res persistence.
	 *
	 * @param searchResPersistence the search res persistence
	 */
	public void setSearchResPersistence(
		SearchResPersistence searchResPersistence) {
		this.searchResPersistence = searchResPersistence;
	}

	/**
	 * Returns the user master local service.
	 *
	 * @return the user master local service
	 */
	public com.Trylof.services.service.UserMasterLocalService getUserMasterLocalService() {
		return userMasterLocalService;
	}

	/**
	 * Sets the user master local service.
	 *
	 * @param userMasterLocalService the user master local service
	 */
	public void setUserMasterLocalService(
		com.Trylof.services.service.UserMasterLocalService userMasterLocalService) {
		this.userMasterLocalService = userMasterLocalService;
	}

	/**
	 * Returns the user master remote service.
	 *
	 * @return the user master remote service
	 */
	public com.Trylof.services.service.UserMasterService getUserMasterService() {
		return userMasterService;
	}

	/**
	 * Sets the user master remote service.
	 *
	 * @param userMasterService the user master remote service
	 */
	public void setUserMasterService(
		com.Trylof.services.service.UserMasterService userMasterService) {
		this.userMasterService = userMasterService;
	}

	/**
	 * Returns the user master persistence.
	 *
	 * @return the user master persistence
	 */
	public UserMasterPersistence getUserMasterPersistence() {
		return userMasterPersistence;
	}

	/**
	 * Sets the user master persistence.
	 *
	 * @param userMasterPersistence the user master persistence
	 */
	public void setUserMasterPersistence(
		UserMasterPersistence userMasterPersistence) {
		this.userMasterPersistence = userMasterPersistence;
	}

	/**
	 * Returns the counter local service.
	 *
	 * @return the counter local service
	 */
	public com.liferay.counter.kernel.service.CounterLocalService getCounterLocalService() {
		return counterLocalService;
	}

	/**
	 * Sets the counter local service.
	 *
	 * @param counterLocalService the counter local service
	 */
	public void setCounterLocalService(
		com.liferay.counter.kernel.service.CounterLocalService counterLocalService) {
		this.counterLocalService = counterLocalService;
	}

	/**
	 * Returns the class name local service.
	 *
	 * @return the class name local service
	 */
	public com.liferay.portal.kernel.service.ClassNameLocalService getClassNameLocalService() {
		return classNameLocalService;
	}

	/**
	 * Sets the class name local service.
	 *
	 * @param classNameLocalService the class name local service
	 */
	public void setClassNameLocalService(
		com.liferay.portal.kernel.service.ClassNameLocalService classNameLocalService) {
		this.classNameLocalService = classNameLocalService;
	}

	/**
	 * Returns the class name remote service.
	 *
	 * @return the class name remote service
	 */
	public com.liferay.portal.kernel.service.ClassNameService getClassNameService() {
		return classNameService;
	}

	/**
	 * Sets the class name remote service.
	 *
	 * @param classNameService the class name remote service
	 */
	public void setClassNameService(
		com.liferay.portal.kernel.service.ClassNameService classNameService) {
		this.classNameService = classNameService;
	}

	/**
	 * Returns the class name persistence.
	 *
	 * @return the class name persistence
	 */
	public ClassNamePersistence getClassNamePersistence() {
		return classNamePersistence;
	}

	/**
	 * Sets the class name persistence.
	 *
	 * @param classNamePersistence the class name persistence
	 */
	public void setClassNamePersistence(
		ClassNamePersistence classNamePersistence) {
		this.classNamePersistence = classNamePersistence;
	}

	/**
	 * Returns the resource local service.
	 *
	 * @return the resource local service
	 */
	public com.liferay.portal.kernel.service.ResourceLocalService getResourceLocalService() {
		return resourceLocalService;
	}

	/**
	 * Sets the resource local service.
	 *
	 * @param resourceLocalService the resource local service
	 */
	public void setResourceLocalService(
		com.liferay.portal.kernel.service.ResourceLocalService resourceLocalService) {
		this.resourceLocalService = resourceLocalService;
	}

	/**
	 * Returns the user local service.
	 *
	 * @return the user local service
	 */
	public com.liferay.portal.kernel.service.UserLocalService getUserLocalService() {
		return userLocalService;
	}

	/**
	 * Sets the user local service.
	 *
	 * @param userLocalService the user local service
	 */
	public void setUserLocalService(
		com.liferay.portal.kernel.service.UserLocalService userLocalService) {
		this.userLocalService = userLocalService;
	}

	/**
	 * Returns the user remote service.
	 *
	 * @return the user remote service
	 */
	public com.liferay.portal.kernel.service.UserService getUserService() {
		return userService;
	}

	/**
	 * Sets the user remote service.
	 *
	 * @param userService the user remote service
	 */
	public void setUserService(
		com.liferay.portal.kernel.service.UserService userService) {
		this.userService = userService;
	}

	/**
	 * Returns the user persistence.
	 *
	 * @return the user persistence
	 */
	public UserPersistence getUserPersistence() {
		return userPersistence;
	}

	/**
	 * Sets the user persistence.
	 *
	 * @param userPersistence the user persistence
	 */
	public void setUserPersistence(UserPersistence userPersistence) {
		this.userPersistence = userPersistence;
	}

	public void afterPropertiesSet() {
		Class<?> clazz = getClass();

		_classLoader = clazz.getClassLoader();
	}

	public void destroy() {
	}

	/**
	 * Returns the OSGi service identifier.
	 *
	 * @return the OSGi service identifier
	 */
	@Override
	public String getOSGiServiceIdentifier() {
		return SearchResService.class.getName();
	}

	@Override
	public Object invokeMethod(String name, String[] parameterTypes,
		Object[] arguments) throws Throwable {
		Thread currentThread = Thread.currentThread();

		ClassLoader contextClassLoader = currentThread.getContextClassLoader();

		if (contextClassLoader != _classLoader) {
			currentThread.setContextClassLoader(_classLoader);
		}

		try {
			return _clpInvoker.invokeMethod(name, parameterTypes, arguments);
		}
		finally {
			if (contextClassLoader != _classLoader) {
				currentThread.setContextClassLoader(contextClassLoader);
			}
		}
	}

	protected Class<?> getModelClass() {
		return SearchRes.class;
	}

	protected String getModelClassName() {
		return SearchRes.class.getName();
	}

	/**
	 * Performs a SQL query.
	 *
	 * @param sql the sql query
	 */
	protected void runSQL(String sql) {
		try {
			DataSource dataSource = searchResPersistence.getDataSource();

			DB db = DBManagerUtil.getDB();

			sql = db.buildSQL(sql);
			sql = PortalUtil.transformSQL(sql);

			SqlUpdate sqlUpdate = SqlUpdateFactoryUtil.getSqlUpdate(dataSource,
					sql);

			sqlUpdate.update();
		}
		catch (Exception e) {
			throw new SystemException(e);
		}
	}

	@BeanReference(type = com.Trylof.services.service.ItemFoundLocalService.class)
	protected com.Trylof.services.service.ItemFoundLocalService itemFoundLocalService;
	@BeanReference(type = com.Trylof.services.service.ItemFoundService.class)
	protected com.Trylof.services.service.ItemFoundService itemFoundService;
	@BeanReference(type = ItemFoundPersistence.class)
	protected ItemFoundPersistence itemFoundPersistence;
	@BeanReference(type = com.Trylof.services.service.ItemLostLocalService.class)
	protected com.Trylof.services.service.ItemLostLocalService itemLostLocalService;
	@BeanReference(type = com.Trylof.services.service.ItemLostService.class)
	protected com.Trylof.services.service.ItemLostService itemLostService;
	@BeanReference(type = ItemLostPersistence.class)
	protected ItemLostPersistence itemLostPersistence;
	@BeanReference(type = com.Trylof.services.service.ItemVerificationLocalService.class)
	protected com.Trylof.services.service.ItemVerificationLocalService itemVerificationLocalService;
	@BeanReference(type = com.Trylof.services.service.ItemVerificationService.class)
	protected com.Trylof.services.service.ItemVerificationService itemVerificationService;
	@BeanReference(type = ItemVerificationPersistence.class)
	protected ItemVerificationPersistence itemVerificationPersistence;
	@BeanReference(type = com.Trylof.services.service.SearchResLocalService.class)
	protected com.Trylof.services.service.SearchResLocalService searchResLocalService;
	@BeanReference(type = com.Trylof.services.service.SearchResService.class)
	protected SearchResService searchResService;
	@BeanReference(type = SearchResPersistence.class)
	protected SearchResPersistence searchResPersistence;
	@BeanReference(type = com.Trylof.services.service.UserMasterLocalService.class)
	protected com.Trylof.services.service.UserMasterLocalService userMasterLocalService;
	@BeanReference(type = com.Trylof.services.service.UserMasterService.class)
	protected com.Trylof.services.service.UserMasterService userMasterService;
	@BeanReference(type = UserMasterPersistence.class)
	protected UserMasterPersistence userMasterPersistence;
	@BeanReference(type = com.liferay.counter.kernel.service.CounterLocalService.class)
	protected com.liferay.counter.kernel.service.CounterLocalService counterLocalService;
	@BeanReference(type = com.liferay.portal.kernel.service.ClassNameLocalService.class)
	protected com.liferay.portal.kernel.service.ClassNameLocalService classNameLocalService;
	@BeanReference(type = com.liferay.portal.kernel.service.ClassNameService.class)
	protected com.liferay.portal.kernel.service.ClassNameService classNameService;
	@BeanReference(type = ClassNamePersistence.class)
	protected ClassNamePersistence classNamePersistence;
	@BeanReference(type = com.liferay.portal.kernel.service.ResourceLocalService.class)
	protected com.liferay.portal.kernel.service.ResourceLocalService resourceLocalService;
	@BeanReference(type = com.liferay.portal.kernel.service.UserLocalService.class)
	protected com.liferay.portal.kernel.service.UserLocalService userLocalService;
	@BeanReference(type = com.liferay.portal.kernel.service.UserService.class)
	protected com.liferay.portal.kernel.service.UserService userService;
	@BeanReference(type = UserPersistence.class)
	protected UserPersistence userPersistence;
	private ClassLoader _classLoader;
	private SearchResServiceClpInvoker _clpInvoker = new SearchResServiceClpInvoker();
}